package com.iris.test.webservice.idcard.com._36wu;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-07-11T09:39:20.648+08:00
 * Generated source version: 3.1.1
 * 
 */
@WebServiceClient(name = "IdCardService", 
                  wsdlLocation = "http://web.36wu.com/IdCardService.asmx?WSDL",
                  targetNamespace = "http://www.36wu.com/") 
public class IdCardService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.36wu.com/", "IdCardService");
    public final static QName IdCardServiceSoap = new QName("http://www.36wu.com/", "IdCardServiceSoap");
    public final static QName IdCardServiceSoap12 = new QName("http://www.36wu.com/", "IdCardServiceSoap12");
    public final static QName IdCardServiceHttpGet = new QName("http://www.36wu.com/", "IdCardServiceHttpGet");
    public final static QName IdCardServiceHttpPost = new QName("http://www.36wu.com/", "IdCardServiceHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://web.36wu.com/IdCardService.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(IdCardService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://web.36wu.com/IdCardService.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public IdCardService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public IdCardService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IdCardService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public IdCardService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public IdCardService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public IdCardService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns IdCardServiceSoap
     */
    @WebEndpoint(name = "IdCardServiceSoap")
    public IdCardServiceSoap getIdCardServiceSoap() {
        return super.getPort(IdCardServiceSoap, IdCardServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IdCardServiceSoap
     */
    @WebEndpoint(name = "IdCardServiceSoap")
    public IdCardServiceSoap getIdCardServiceSoap(WebServiceFeature... features) {
        return super.getPort(IdCardServiceSoap, IdCardServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns IdCardServiceSoap
     */
    @WebEndpoint(name = "IdCardServiceSoap12")
    public IdCardServiceSoap getIdCardServiceSoap12() {
        return super.getPort(IdCardServiceSoap12, IdCardServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IdCardServiceSoap
     */
    @WebEndpoint(name = "IdCardServiceSoap12")
    public IdCardServiceSoap getIdCardServiceSoap12(WebServiceFeature... features) {
        return super.getPort(IdCardServiceSoap12, IdCardServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns IdCardServiceHttpGet
     */
    @WebEndpoint(name = "IdCardServiceHttpGet")
    public IdCardServiceHttpGet getIdCardServiceHttpGet() {
        return super.getPort(IdCardServiceHttpGet, IdCardServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IdCardServiceHttpGet
     */
    @WebEndpoint(name = "IdCardServiceHttpGet")
    public IdCardServiceHttpGet getIdCardServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(IdCardServiceHttpGet, IdCardServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns IdCardServiceHttpPost
     */
    @WebEndpoint(name = "IdCardServiceHttpPost")
    public IdCardServiceHttpPost getIdCardServiceHttpPost() {
        return super.getPort(IdCardServiceHttpPost, IdCardServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IdCardServiceHttpPost
     */
    @WebEndpoint(name = "IdCardServiceHttpPost")
    public IdCardServiceHttpPost getIdCardServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(IdCardServiceHttpPost, IdCardServiceHttpPost.class, features);
    }

}
